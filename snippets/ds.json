{"antAlert":{"prefix":"antAlert","body":["import { Alert } from 'antd';","","<div>","    <Alert","        message=\"Success Tips\"","        description=\"Detailed description and advice about successful copywriting.\"","        type=\"success\"","        showIcon","    />","    <Alert","        message=\"Informational Notes\"","        description=\"Additional description and information about copywriting.\"","        type=\"info\"","        showIcon","    />","    <Alert","        message=\"Warning\"","        description=\"This is a warning notice about copywriting.\"","        type=\"warning\"","        showIcon","    />","    <Alert","        message=\"Error\"","        description=\"This is an error message about copywriting.\"","        type=\"error\"","        showIcon","    />","</div>",""],"description":"antAlert","group":"ant"},"antAvatar":{"prefix":"antAvatar","body":["import { Avatar } from 'antd';","","<div>","    <Avatar icon=\"user\" />","    <Avatar icon={<Icon type=\"user\" />} />","    <Avatar>U</Avatar>","    <Avatar>USER</Avatar>","    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />","    <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>U</Avatar>","    <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />","</div>",""],"description":"antAvatar","group":"ant"},"antBadge":{"prefix":"antBadge","body":["import { Badge } from 'antd';","","<div>","    <Badge count={5}>","        <a href=\"#\" className=\"head-example\" />","    </Badge>","    <Badge count={0} showZero>","        <a href=\"#\" className=\"head-example\" />","    </Badge>","    <Badge count={<Icon type=\"clock-circle\" style={{ color: '#f5222d' }} />}>","        <a href=\"#\" className=\"head-example\" />","    </Badge>","</div>",""],"description":"antBadge","group":"ant"},"antBreadcrumb":{"prefix":"antBreadcrumb","body":["import { Breadcrumb } from 'antd';","","<Breadcrumb>","    <Breadcrumb.Item>Home</Breadcrumb.Item>","    <Breadcrumb.Item>","        <a href=\"\">Application Center</a>","    </Breadcrumb.Item>","    <Breadcrumb.Item>","        <a href=\"\">Application List</a>","    </Breadcrumb.Item>","    <Breadcrumb.Item>An Application</Breadcrumb.Item>","</Breadcrumb>",""],"description":"antBreadcrumb","group":"ant"},"antButton":{"prefix":"antButton","body":["import { Button } from 'antd';","","<div>","    <Button type=\"primary\">Primary</Button>","    <Button>Default</Button>","    <Button type=\"dashed\">Dashed</Button>","    <Button type=\"danger\">Danger</Button>","    <Button type=\"link\">Link</Button>","</div>",""],"description":"antButton","group":"ant"},"antButtonGroup":{"prefix":"antButtonGroup","body":["<Button.Group size={size}>","    <Button type=\"primary\">","        <Icon type=\"left\" />","            Backward","        </Button>","    <Button type=\"primary\">","        Forward","            <Icon type=\"right\" />","    </Button>","</Button.Group>",""],"description":"antButtonGroup","group":"ant"},"antCalendar":{"prefix":"antCalendar","body":["import { Calendar } from 'antd';","","<Calendar","    onPanelChange={(value, mode) => {","        console.log(value, mode);","    }}","    dateCellRender={(date) => {","        // date:moment","        console.log(date)","    }}","    monthCellRender={(date) => {","        // date:moment","        console.log(date)","    }}","    onSelect={(date) => {","        // date:moment","        console.log(date)","    }}","/>",""],"description":"antCalendar","group":"ant"},"antCard":{"prefix":"antCard","body":["import { Card } from 'antd';","","<Card","    title=\"Default size card\"","    extra={","        <a href=\"#\">More</a>","    }","    style={{ width: 300 }}","    hoverable={true}","    loading={true}","    size=\"default\"",">","    <p>Card content</p>","    <p>Card content</p>","    <p>Card content</p>","</Card>",""],"description":"antCard","group":"ant"},"antCollapse":{"prefix":"antCollapse","body":["import { Collapse } from 'antd';","const { Panel } = Collapse;","","/**"," * Collapse折叠面板"," * 更多api见官网：https://ant.design/components/collapse-cn/","*/","const genExtra = () => (","    <Icon","        type=\"setting\"","        onClick={event => {","            // If you don't want click extra trigger collapse, you can prevent this:","            event.stopPropagation();","        }}","    />",");","","<Collapse","    accordion","    defaultActiveKey={['1']}","    onChange={(key) => {","        console.log(key);","    }}",">","    <Panel header=\"This is panel header 1\" key=\"1\" extra={genExtra()}>","        <div>123</div>","    </Panel>","    <Panel header=\"This is panel header 2\" key=\"2\" extra={genExtra()}>","        <div>123</div>","    </Panel>","    <Panel header=\"This is panel header 3\" key=\"3\" extra={genExtra()}>","        <div>123</div>","    </Panel>","</Collapse>",""],"description":"antCollapse","group":"ant"},"antConfirm":{"prefix":"antConfirm","body":["import { Modal } from 'antd';","const { confirm } = Modal;","","confirm({","    title: \"Are you sure delete this task?\",","    content: \"Some descriptions\",","    okText: \"确定\",","    okType: \"danger\",","    cancelText: \"取消\",","    onOk() {","        console.log(\"OK\");","    },","    onCancel() {","        console.log(\"Cancel\");","    }","})",""],"description":"antConfirm","group":"ant"},"antDatePicker":{"prefix":"antDatePicker","body":["import { DatePicker, TimePicker, Space } from 'antd';","const { RangePicker } = DatePicker;","","/**"," * 日期选择框：DatePicker、RangePicker"," * picker: date、week、month、quarter、year"," * 更多api见antd官网: https://ant.design/components/date-picker-cn/","*/","","<Space>","    <DatePicker","        onChange={(date, dateString) => {","            console.log(date, dateString);","        }}","    />","    <RangePicker","        showTime","        picker=\"week\"","    />","</Space>",""],"description":"antDatePicker","group":"ant"},"antDescription":{"prefix":"antDescription","body":["import { Descriptions } from 'antd';","","<Descriptions title=\"User Info\">","    <Descriptions.Item label=\"UserName\">Zhou Maomao</Descriptions.Item>","    <Descriptions.Item label=\"Telephone\">1810000000</Descriptions.Item>","    <Descriptions.Item label=\"Live\">Hangzhou, Zhejiang</Descriptions.Item>","    <Descriptions.Item label=\"Remark\">empty</Descriptions.Item>","    <Descriptions.Item label=\"Address\">","        No. 18, Wantang Road, Xihu District, Hangzhou, Zhejiang, China","    </Descriptions.Item>","</Descriptions>",""],"description":"antDescription","group":"ant"},"antDivider":{"prefix":"antDivider","body":["import { Divider } from 'antd';","","<div>","    <Divider type=\"vertical\" />","    <Divider dashed />","    <Divider>Text</Divider>","    <Divider orientation=\"right\">Right Text</Divider>","</div>",""],"description":"antDivider","group":"ant"},"antDrawer":{"prefix":"antDrawer","body":["import { Drawer } from 'antd';","","/**"," * mask：是否展示遮罩"," * maskClosable：点击蒙层是否允许关闭"," * closable：是否显示右上角的关闭按钮"," * destroyOnClose：关闭时销毁 Drawer 里的子元素"," * placement：抽屉的方向\t'top' | 'right' | 'bottom' | 'left'"," * zIndex：设置 Drawer 的 z-index","*/","<Drawer","    title=\"Basic Drawer\"","    placement=\"right\"","    closable={false}","    width={256}","    onClose={this.onClose}","    visible={this.state.visible}",">","    <p>Some contents...</p>","    <p>Some contents...</p>","    <p>Some contents...</p>","</Drawer>",""],"description":"antDrawer","group":"ant"},"antDropdown":{"prefix":"antDropdown","body":["import { Dropdown, Menu } from 'antd';","","<Dropdown","    overlay={","        <Menu>","            <Menu.Item>","                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">","                    1st menu item","                </a>","            </Menu.Item>","            <Menu.Item>","                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">","                    2nd menu item","                </a>","            </Menu.Item>","            <Menu.Item>","                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">","                    3rd menu item","                </a>","            </Menu.Item>","        </Menu>","    }",">","    <a","        className=\"ant-dropdown-link\"","        onClick={e => e.preventDefault()}","    >","        Hover me <Icon type=\"down\" />","    </a>","</Dropdown>",""],"description":"antDropdown","group":"ant"},"antEmpty":{"prefix":"antEmpty","body":["import { Empty } from 'antd';","","<Empty","    image=\"https://gw.alipayobjects.com/mdn/miniapp_social/afts/img/A*pevERLJC9v0AAAAAAAAAAABjAQAAAQ/original\"","    imageStyle={{","        height: 60","    }}","    description={","        <span>","            Customize <a href=\"#API\">Description</a>","        </span>","    }",">","    <Button type=\"primary\">Create Now</Button>","</Empty>",""],"description":"antEmpty","group":"ant"},"antForm3":{"prefix":"antForm3","body":["","import { Form, Select, Input } from 'antd';","const { Option } = Select;","","const formItemLayout = {","    labelCol: {","        xs: { span: 24 },","        sm: { span: 6 },","    },","    wrapperCol: {","        xs: { span: 24 },","        sm: { span: 16 },","    },","};","","<Form {...formItemLayout}>","    <Form.Item","        label='姓名'","        validateStatus=\"error\"","    >","        <Input placeholder=\"请输入用户名\" />","    </Form.Item>","    <Form.Item","        label='账号'","        hasFeedback","        validateStatus=\"validating\"","        help=\"The information is being validated...\"","    >","        <Input placeholder=\"请输入账号\" />","    </Form.Item>","    <Form.Item","        label='邮箱'","        hasFeedback","        validateStatus=\"success\"","    >","        <Input placeholder=\"请输入邮箱\" />","    </Form.Item>","    <Form.Item label='团队'>","        <Select placeholder='请选择团队'>","            <Option value={1}>团队1</Option>","            <Option value={2}>团队2</Option>","            <Option value={3}>团队3</Option>","        </Select>","    </Form.Item>","</Form>",""],"description":"antForm3","group":"ant"},"antList":{"prefix":"antList","body":["import { List, Avatar } from 'antd';","","/**"," * List列表"," * 更多api见官网：https://ant.design/components/list-cn/","*/","","const data = [","    {","        title: 'Ant Design Title 1',","    },","    {","        title: 'Ant Design Title 2',","    },","    {","        title: 'Ant Design Title 3',","    },","    {","        title: 'Ant Design Title 4',","    },","];","<List","    itemLayout=\"horizontal\"","    dataSource={data}","    renderItem={item => (","        <List.Item>","            <List.Item.Meta","                avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}","                title={<a href=\"https://ant.design\">{item.title}</a>}","                description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"","            />","        </List.Item>","    )}","/>",""],"description":"antList","group":"ant"},"antModal":{"prefix":"antModal","body":["import { Modal } from 'antd';","","<Modal","    wrapClassName=\"modal-class\"","    title=\"modal弹窗\"","    visible={true || false}","    onOk={onOk}","    onCancel={onCancel}","    afterClose={afterClose}","    maskClosable={true}","    centered={false}","    cancelText=\"quxiao\"","    okText=\"queding\"","    okType=\"primary\"","    destroyOnClose // 默认关闭后状态不会自动清空, 如果希望每次打开都是新内容，请设置 destroyOnClose",">","","</Modal>",""],"description":"antModal","group":"ant"},"antNotification":{"prefix":"antNotification","body":["import { notification } from 'antd';","","// type：success，info，warning，error","notification.success({","    message: \"Notification Title\",","    description: \"This is the content of the notification.\"","})",""],"description":"antNotification","group":"ant"},"antPagination":{"prefix":"antPagination","body":["import { Pagination } from 'antd';","","<Pagination","    size=\"small\"","    total={85}","    showTotal={total => `Total ${total} items`}","    pageSize={20}","    defaultCurrent={1}","    showSizeChanger","    showQuickJumper","    onChange={(page, pageSize) => { }}","    onShowSizeChange={(page, pageSize) => { }}","    simple={false}\t\t// 简单模式","/>",""],"description":"antPagination","group":"ant"},"antPopconfirm":{"prefix":"antPopconfirm","body":["import { Popconfirm } from 'antd';","","<Popconfirm","    title=\"Are you sure delete this task?\"","    onConfirm={() => {","","    }}","    onCancel={() => {","","    }}","    okText=\"Yes\"","    cancelText=\"No\"","    placement=\"top\"\t// topLeft，top，topRight，leftTop，left，leftBottom，rightTop，right，rightBottom等",">","    <a href=\"#\">Delete</a>","</Popconfirm>",""],"description":"antPopconfirm","group":"ant"},"antPopover":{"prefix":"antPopover","body":["import { Popover } from 'antd';","","/**"," * 卡片类名：overlayClassName"," * 卡片样式：overlayStyle"," * 气泡位置：placement  气泡框位置，可选 top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom"," * 触发行为：trigger  可选 hover/focus/click/contextMenu，默认hover"," */","","<Popover","    content={() => {","        return <div>内容</div>;","    }}","    title=\"Title\"","    trigger=\"click\"\t\t// trigger默认是hover",">","    <Button type=\"primary\">","        click me","    </Button>","</Popover>",""],"description":"antPopover","group":"ant"},"antProgress":{"prefix":"antProgress","body":["import { Progress } from 'antd';","","<Progress","    percent={70}","    status=\"exception\"\t// success exception normal active","    showInfo={false}","    size=\"default\"","/>",""],"description":"antProgress","group":"ant"},"antRadio":{"prefix":"antRadio","body":["import { Radio } from 'antd';","","<Radio.Group","    value={this.state.value}","    onChange={(e) => {","        const value = e.target.value;","    }}",">","    <Radio value={1}>A</Radio>","    <Radio value={2}>B</Radio>","    <Radio value={3}>C</Radio>","    <Radio value={4}>D</Radio>","</Radio.Group>;","","<Radio.Group","    defaultValue=\"a\"","    buttonStyle=\"solid\"",">","    <Radio.Button value=\"a\">Hangzhou</Radio.Button>","    <Radio.Button value=\"b\">Shanghai</Radio.Button>","    <Radio.Button value=\"c\">Beijing</Radio.Button>","    <Radio.Button value=\"d\">Chengdu</Radio.Button>","</Radio.Group>",""],"description":"antRadio","group":"ant"},"antResult":{"prefix":"antResult","body":["import { Result } from 'antd';","","<Result","    status=\"success\"","    title=\"Successfully Purchased Cloud Server ECS!\"","    subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"","    extra={[","        <Button type=\"primary\" key=\"console\">","            Go Console","        </Button>,","        <Button key=\"buy\">Buy Again</Button>,","    ]}","/>",""],"description":"antResult","group":"ant"},"antSelect":{"prefix":"antSelect","body":["import { Select } from 'antd';","const { Option } = Select;","","<Select","    value={\"jack\" || undefined}","    style={{ width: 120 }}","    onChange={() => {","","    }}","    placeholder=\"请选择\"",">","    <Option value=\"jack\">Jack</Option>","    <Option value=\"lucy\">Lucy</Option>","    <Option value=\"disabled\" disabled>","        Disabled","    </Option>","</Select>",""],"description":"antSelect","group":"ant"},"antSlide":{"prefix":"antSlide","body":["import { Slider, Switch } from 'antd';","","/**"," * range：双滑块模式"," * 更多api见官网：https://ant.design/components/slider-cn/","*/","<Slider","    range","    min={1}","    max={20}","    defaultValue={[20, 50]}","    disabled={disabled}","    onChange={(value) => {","        console.log('onChange: ', value);","    }}","/>",""],"description":"antSlide","group":"ant"},"antSpin":{"prefix":"antSpin","body":["import { Spin } from 'antd';","","/**"," * delay：延迟显示加载效果的时间（防止闪烁）\tms"," * indicator：加载指示符"," * 组件大小，可选值为 small default large：size"," * 是否为加载中状态：spinning"," * 当作为包裹元素时，可以自定义描述文案\t：tip"," * 包装器的类属性：wrapperClassName","*/","<div>","    <Spin />","    <Spin tip=\"Loading...\">","        <Alert","            message=\"Alert message title\"","            description=\"Further details about the context of this alert.\"","            type=\"info\"","        />","    </Spin>","</div>",""],"description":"antSpin","group":"ant"},"antStep":{"prefix":"antStep","body":["import { Steps } from 'antd';","const { Step } = Steps;","","<div>","    <Steps current={1}>","        <Step title=\"Finished\" description=\"This is a description.\" />","        <Step title=\"In Progress\" subTitle=\"Left 00:00:08\" description=\"This is a description.\" />","        <Step title=\"Waiting\" description=\"This is a description.\" />","    </Steps>","","    <Steps>","        <Step status=\"finish\" title=\"Login\" icon={<Icon type=\"user\" />} />","        <Step status=\"finish\" title=\"Verification\" icon={<Icon type=\"solution\" />} />","        <Step status=\"process\" title=\"Pay\" icon={<Icon type=\"loading\" />} />","        <Step status=\"wait\" title=\"Done\" icon={<Icon type=\"smile-o\" />} />","    </Steps>","</div>",""],"description":"antStep","group":"ant"},"antSwitch":{"prefix":"antSwitch","body":["import { Switch } from 'antd';","","<Switch","    className=\"switch-name\"","    checkedChildren=\"开\"","    unCheckedChildren=\"关\"","    loading={true}","    defaultChecked","    onChange={(value) => {","","    }}","/>",""],"description":"antSwitch","group":"ant"},"antTable":{"prefix":"antTable","body":["import { Table } from 'antd';","","const columns = [","    {","        title: 'Name',","        dataIndex: 'name',","        key: 'name',","        ellipsis: true,","        render: text => <a>{text}</a>,","    },","    {","        title: 'Age',","        dataIndex: 'age',","        key: 'age',","    },","    {","        title: 'Address',","        dataIndex: 'address',","        key: 'address',","    },","    {","        title: 'Tags',","        key: 'tags',","        dataIndex: 'tags',","        render: tags => (","            <span>","                tag","            </span>","        ),","    },","    {","        title: 'Action',","        key: 'action',","        render: (text, record) => (","            <span>","                <a>Invite {record.name}</a>","                <Divider type=\"vertical\" />","                <a>Delete</a>","            </span>","        ),","    },","];","","","<Table","    className='border-table'","    rowKey=\"id\"","    dataSource={[]}","    columns={columns}","    loading={true}","    scroll={{ x: 1900 }}","    pagination={{","        pageSize: 10,","        total: 100,","        current: 1,","        showTotal: total => `共${total}条`,","        onChange: () => { },","        onShowSizeChange: () => { },","        showQuickJumper: true,","        showSizeChanger: true","    }}","/>",""],"description":"antTable","group":"ant"},"antTabs":{"prefix":"antTabs","body":["import { Tabs } from 'antd';","const { TabPane } = Tabs;","","<Tabs","    defaultActiveKey=\"1\"","    onChange={(activeKey) => {","        console.log(\"current key\", activeKey);","    }}",">","    <TabPane tab=\"Tab 1\" key=\"1\">","        Content of Tab Pane 1","\t</TabPane>","    <TabPane tab=\"Tab 2\" key=\"2\">","        Content of Tab Pane 2","\t</TabPane>","    <TabPane tab=\"Tab 3\" key=\"3\">","        Content of Tab Pane 3","\t</TabPane>","</Tabs>",""],"description":"antTabs","group":"ant"},"antTimePicker":{"prefix":"antTimePicker","body":["import { TimePicker } from 'antd';","","/**"," * 时间选择框"," * value、defaultValue: 接收moment对象"," * 更多api见官网: https://ant.design/components/time-picker-cn/","*/","","<TimePicker","    defaultOpenValue={moment('00:00:00', 'HH:mm:ss')}","    onChange={(time, timeString) => {","        console.log(time, timeString);","    }}","/>",""],"description":"antTimePicker","group":"ant"},"antTimeline":{"prefix":"antTimeline","body":["import { Timeline } from 'antd';","","<Timeline>","    <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>","    <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>","    <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />} color=\"red\">","        Technical testing 2015-09-01","    </Timeline.Item>","    <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>","</Timeline>",""],"description":"antTimeline","group":"ant"},"antTooltip":{"prefix":"antTooltip","body":["/**"," * 卡片类名：overlayClassName"," * 卡片样式：overlayStyle"," * 气泡位置：placement  气泡框位置，可选 top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom"," * 触发行为：trigger  可选 hover/focus/click/contextMenu，默认hover"," * */","<Tooltip","    title=\"prompt text\"","    placement=\"top\"",">","    <span>tooltip</span>","</Tooltip>",""],"description":"antTooltip","group":"ant"},"antTransfer":{"prefix":"antTransfer","body":["import { Transfer } from 'antd';","","/**"," * Transfer穿梭框"," * 更多api见官网: https://ant.design/components/transfer-cn/","*/","","<Transfer","    dataSource={mockData}","    titles={['Source', 'Target']}","    targetKeys={targetKeys}","    selectedKeys={selectedKeys}","    onSelectChange={(sourceSelectedKeys, targetSelectedKeys) => {","        console.log('sourceSelectedKeys:', sourceSelectedKeys);","        console.log('targetSelectedKeys:', targetSelectedKeys);","    }}","    onChange={(nextTargetKeys, direction, moveKeys) => {","        console.log('targetKeys:', nextTargetKeys);","        console.log('direction:', direction);","        console.log('moveKeys:', moveKeys);","    }}","    onScroll={(direction, e) => {","        console.log('direction:', direction);","        console.log('target:', e.target);","    }}","    render={item => item.title}","/>",""],"description":"antTransfer","group":"ant"},"antTree":{"prefix":"antTree","body":["import { Tree } from 'antd';","","/**"," * Tree树形控件"," * 更多api见官网: https://ant.design/components/tree-cn/","*/","","const treeData = [","    {","        title: 'parent 1',","        key: '0-0',","        children: [","            {","                title: 'parent 1-0',","                key: '0-0-0',","                disabled: true,","            },","            {","                title: 'parent 1-1',","                key: '0-0-1',","            },","        ],","    },","];","","<Tree","    checkable","    defaultExpandedKeys={['0-0-0', '0-0-1']}","    defaultSelectedKeys={['0-0-0', '0-0-1']}","    defaultCheckedKeys={['0-0-0', '0-0-1']}","    onSelect={(selectedKeys, info) => {","        console.log('selected', selectedKeys, info);","    }}","    onCheck={(checkedKeys, info) => {","        console.log('onCheck', checkedKeys, info);","    }}","    treeData={treeData}","/>",""],"description":"antTree","group":"ant"},"antTreeSelect":{"prefix":"antTreeSelect","body":["import { TreeSelect } from 'antd';","const { TreeNode } = TreeSelect;","","/**"," * TreeSelect树选择"," * 更多api见官网: https://ant.design/components/tree-select-cn/","*/","","<TreeSelect","    showSearch","    style={{ width: '100%' }}","    value={value}","    dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}","    placeholder=\"Please select\"","    allowClear","    treeDefaultExpandAll","    onChange={(value) => {","        console.log('value', value)","    }}",">","    <TreeNode value=\"parent 1\" title=\"parent 1\">","        <TreeNode value=\"parent 1-0\" title=\"parent 1-0\">","            <TreeNode value=\"leaf1\" title=\"leaf1\" />","            <TreeNode value=\"leaf2\" title=\"leaf2\" />","        </TreeNode>","        <TreeNode value=\"parent 1-1\" title=\"parent 1-1\">","            <TreeNode value=\"leaf3\" title={<b style={{ color: '#08c' }}>leaf3</b>} />","        </TreeNode>","    </TreeNode>","</TreeSelect>",""],"description":"antTreeSelect","group":"ant"},"antUpload":{"prefix":"antUpload","body":["import { Upload, message, Button, Icon } from 'antd';","","// https://3x.ant.design/components/upload-cn/","const props = {","    name: 'file',","    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',","    headers: {","        authorization: 'authorization-text',","    },","    onChange(info) {","        if (info.file.status !== 'uploading') {","            console.log(info.file, info.fileList);","        }","        if (info.file.status === 'done') {","            message.success(`${info.file.name} file uploaded successfully`);","        } else if (info.file.status === 'error') {","            message.error(`${info.file.name} file upload failed.`);","        }","    },","};","","<Upload {...props}>","    <Button>","        <Icon type=\"upload\" /> Click to Upload","    </Button>","</Upload>",""],"description":"antUpload","group":"ant"},"cssBorderRadius":{"prefix":"cssBorderRadius","body":["p {","    -webkit-border-radius: 3px;","    -moz-border-radius: 3px;","    border-radius: 3px;","}",""],"description":"cssBorderRadius","group":"css"},"cssBoxShadow":{"prefix":"cssBoxShadow","body":[".box-shadow {","    background: #F0F2F3;","    -webkit-box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.10), 0 10px 12px 0 rgba(170, 182, 206, 0.20);","    -moz-box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.10), 0 10px 12px 0 rgba(170, 182, 206, 0.20);","    box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.10), 0 10px 12px 0 rgba(170, 182, 206, 0.20);","}",""],"description":"cssBoxShadow","group":"css"},"cssColor":{"prefix":"cssColor","body":["// colors","@blue: #2E81F7;","@warning: #F7B035;","@error: #EF6555;","@success: #07C790;","","@bg: #F1F2F5;","@border: #B2BECD;","@disabled: #17233D;","@title: #17233D;","@content: #17233D;","","@color1: #58a8b6;","@color2: #5293C7;","@color3: #34495e;",""],"description":"cssColor","group":"css"},"cssEllipsis":{"prefix":"cssEllipsis","body":[".ellipsis {","    overflow: hidden;","    text-overflow: ellipsis;","    -o-text-overflow: ellipsis;","    -webkit-text-overflow: ellipsis;","    -moz-text-overflow: ellipsis;","    white-space: nowrap;","}",""],"description":"cssEllipsis","group":"css"},"cssFontface":{"prefix":"cssFontface","body":["@font-face {","    font-family: \"iconfont\";","    src: url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.eot?t=1585192981836');","    /* IE9 */","    src: url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.eot?t=1585192981836#iefix') format('embedded-opentype'),","        /* IE6-IE8 */","        url('./webfont.woff') format('woff2'),","        url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.woff?t=1585192981836') format('woff'),","        url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.ttf?t=1585192981836') format('truetype'),","        /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */","        url('//at.alicdn.com/t/font_1030718_24xegj2rfxl.svg?t=1585192981836#iconfont') format('svg');","    /* iOS 4.1- */","}","",".iconfont {","    font-family: \"iconfont\" !important;","    font-size: 16px;","    font-style: normal;","    -webkit-font-smoothing: antialiased;","    -moz-osx-font-smoothing: grayscale;","}",""],"description":"cssFontface","group":"css"},"cssInsetShadow":{"prefix":"cssInsetShadow","body":[".insetShadow {","    -moz-box-shadow: inset 0px 1px 9px 4px rgba(0, 0, 0, .15);","    -webkit-box-shadow: inset 0px 1px 9px 4px rgba(0, 0, 0, .15);","    box-shadow: inset 0px 1px 9px 4px rgba(0, 0, 0, .15);","}",""],"description":"cssInsetShadow","group":"css"},"cssNormalize":{"prefix":"cssNormalize","body":["/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */","","/* Document","       ========================================================================== */","","/**","     * 1. Correct the line height in all browsers.","     * 2. Prevent adjustments of font size after orientation changes in iOS.","     */","","html {","    line-height: 1.15;","    /* 1 */","    -webkit-text-size-adjust: 100%;","    /* 2 */","}","","body {","    margin: 0;","}","","h1 {","    font-size: 2em;","    margin: 0.67em 0;","}","","hr {","    box-sizing: content-box;","    /* 1 */","    height: 0;","    /* 1 */","    overflow: visible;","    /* 2 */","}","","pre {","    font-family: monospace, monospace;","    /* 1 */","    font-size: 1em;","    /* 2 */","}","","a {","    background-color: transparent;","}","","abbr[title] {","    border-bottom: none;","    /* 1 */","    text-decoration: underline;","    /* 2 */","    text-decoration: underline dotted;","    /* 2 */","}","","b,","strong {","    font-weight: bolder;","}","","code,","kbd,","samp {","    font-family: monospace, monospace;","    /* 1 */","    font-size: 1em;","    /* 2 */","}","","small {","    font-size: 80%;","}","","sub,","sup {","    font-size: 75%;","    line-height: 0;","    position: relative;","    vertical-align: baseline;","}","","sub {","    bottom: -0.25em;","}","","sup {","    top: -0.5em;","}","","img {","    border-style: none;","}","","button,","input,","optgroup,","select,","textarea {","    font-family: inherit;","    /* 1 */","    font-size: 100%;","    /* 1 */","    line-height: 1.15;","    /* 1 */","    margin: 0;","    /* 2 */","}","","button,","input {","    /* 1 */","    overflow: visible;","}","","button,","select {","    /* 1 */","    text-transform: none;","}","","button,","[type=\"button\"],","[type=\"reset\"],","[type=\"submit\"] {","    -webkit-appearance: button;","}","","button::-moz-focus-inner,","[type=\"button\"]::-moz-focus-inner,","[type=\"reset\"]::-moz-focus-inner,","[type=\"submit\"]::-moz-focus-inner {","    border-style: none;","    padding: 0;","}","","button:-moz-focusring,","[type=\"button\"]:-moz-focusring,","[type=\"reset\"]:-moz-focusring,","[type=\"submit\"]:-moz-focusring {","    outline: 1px dotted ButtonText;","}","","fieldset {","    padding: 0.35em 0.75em 0.625em;","}","","legend {","    box-sizing: border-box;","    /* 1 */","    color: inherit;","    /* 2 */","    display: table;","    /* 1 */","    max-width: 100%;","    /* 1 */","    padding: 0;","    /* 3 */","    white-space: normal;","    /* 1 */","}","","progress {","    vertical-align: baseline;","}","","textarea {","    overflow: auto;","}","","[type=\"checkbox\"],","[type=\"radio\"] {","    box-sizing: border-box;","    /* 1 */","    padding: 0;","    /* 2 */","}","","[type=\"number\"]::-webkit-inner-spin-button,","[type=\"number\"]::-webkit-outer-spin-button {","    height: auto;","}","","[type=\"search\"] {","    -webkit-appearance: textfield;","    /* 1 */","    outline-offset: -2px;","    /* 2 */","}","","[type=\"search\"]::-webkit-search-decoration {","    -webkit-appearance: none;","}","","::-webkit-file-upload-button {","    -webkit-appearance: button;","    /* 1 */","    font: inherit;","    /* 2 */","}","","details {","    display: block;","}","","summary {","    display: list-item;","}","","template {","    display: none;","}","","[hidden] {","    display: none;","}",""],"description":"cssNormalize","group":"css"},"cssRotate":{"prefix":"cssRotate","body":["i {","    transform: rotate(-90deg);","    -moz-transform: rotate(-90deg);","    -webkit-transform: rotate(-90deg);","}","","i:hover {","    transform: rotate(90deg);","    -moz-transform: rotate(90deg);","    -webkit-transform: rotate(90deg);","}",""],"description":"cssRotate","group":"css"},"cssScrollbar":{"prefix":"cssScrollbar","body":["&::-webkit-scrollbar {","    display: none;","}",""],"description":"cssScrollbar","group":"css"},"cssVerticalCenter":{"prefix":"cssVerticalCenter","body":[".verticalcenter {","    position: relative;","    top: 50%;","    -webkit-transform: translateY(-50%);","    -o-transform: translateY(-50%);","    transform: translateY(-50%);","}",""],"description":"cssVerticalCenter","group":"css"},"dsAuthBtn":{"prefix":"dsAuthBtn","body":["import { AuthBtn } from \"@dsyd/com\";","","<AuthBtn auth={false} type=\"primary\">无权限</AuthBtn>"],"description":"dsAuthBtn","group":"ds"},"dsComIcon":{"prefix":"dsComIcon","body":["import { ComIcon } from \"@dsyd/com\";","","<ComIcon prefix='robin-' type=\"fuzhi\" style={{ color: 'red' }} />"],"description":"dsComIcon","group":"ds"},"dsDynamicFieldSet":{"prefix":"dsDynamicFieldSet","body":["import { DynamicFieldSet, GForm } from '@dsyd/com';","","const formSet = [","  {","    type: 'input',","    name: 'name',","    props: {","      placeholder: '姓名',","    },","  },","  {","    type: 'select',","    name: 'sex',","    props: {","      placeholder: '性别',","    },","    optionsData: [","      { label: '男', value: '0' },","      { label: '女', value: '1' },","    ],","  },","  {","    type: 'datepicker',","    name: 'date',","    props: {","      placeholder: '入职日期',","    },","  },","];","","export default () => {","  const formRef = useRef();","","  return (","    <GForm","      column={1}","      actionRef={formRef}","      submitCall={values => {","        console.log(values);","      }}","      formSet={[","        {","          type: 'custom',","          renderChild: <DynamicFieldSet name=\"list\" listFormSet={formSet} />,","        },","      ]}","    />","  );","};"],"description":"dsDynamicFieldSet","group":"ds"},"dsEllipsis":{"prefix":"dsEllipsis","body":["import { Ellipsis } from \"@dsyd/com\";","","<Ellipsis copyable widthLimit={100} title=\"你看我有省略号吗？\" />"],"description":"dsEllipsis","group":"ds"},"dsFileUpload":{"prefix":"dsFileUpload","body":["import { FileUpload } from \"@dsyd/com\";","","<FileUpload","    value={value}","    maxLength={5}","    showUploadList={{ showDownloadIcon: true }}","    onChange={onChange}","    templateUrl={'111'}","    disabled={disabled}","/>"],"description":"dsFileUpload","group":"ds"},"dsGFrom":{"prefix":"dsGFrom","body":["import { GForm, AuthBtn } from '@dsyd/com';","","export default () => {","  const props = {","    formSet: [","      {","        type: 'input',","        label: '用户名',","        name: 'username',","      },","      {","        type: 'password',","        label: '密码',","        name: 'password',","      },","    ],","    column: 1,","    style: { width: 400, margin: '0 auto' },","    defaultFooterBar: false,","    layout: 'vertical',","    submitCall: values => {","      console.log(values);","    },","    toolBarRender: actionRef => (","      <AuthBtn","        style={{ width: '100%' }}","        type=\"primary\"","        onClick={() => {","          actionRef.submit();","        }}","      >","        登录","      </AuthBtn>","    ),","  };","  return <GForm {...props} />;","};"],"description":"dsGFrom","group":"ds"},"dsHookDvaPage":{"prefix":"dsHookDvaPage","body":["/*"," * @CreatDate: 2021-10-19 09:03:02"," * @Describe: 加model查询模板"," */","","import { useRef, useEffect } from 'react';","import {connect} from 'umi';","import { GTable, WrapKeepAlive } from '@/components';","import { getLoginLog } from './service';","","const Page = ({ location, configMap, dictMap }) => {","  const actionRef = useRef();","","  const columns = [","    {","      title: '用户账号',","      dataIndex: 'username',","      valueType: 'input'","    },","    {","      title: '用户昵称',","      dataIndex: 'nickName',","      valueType: 'input'","    },","    {","      title: '状态',","      dataIndex: 'loginStatus',","      valueType: 'select',","      valueEnum: {","        '登陆成功': { text: '登陆成功', status: 'Success' },","        '登陆失败': { text: '登陆失败', status: 'Default' }","      }","    },","    {","      title: 'IP地址',","      dataIndex: 'ipAddr',","      valueType: 'input'","    },","    {","      title: '登录时间',","      dataIndex: 'loginTime',","      type: 'dateTime',","      hideInSearch: true","    },","    {","      title: '登录时间',","      dataIndex: 'created_at',","      valueType: 'dateTimeRange',","      hideInTable: true,","      search: {","        transform: (value) => {","          return {","            loginTimeStart: value[0],","            loginTimeEnd: value[1]","          };","        }","      }","    },","    {","        title: '操作',","        dataIndex: 'option',","        valueType: 'option',","        hideInForm: true,","        width: 70,","        fixed: 'right',","        render: (_, record) => {","          const btns = [","            {","              name: '打开',","              // auth: isAuth('uc:dict:update'),","              auth: true,","              method: () => {","                console.log('方法');","              }","            }","          ];","          return (<TableBtns buttons={btns} />);","        }","      }","  ];","","  useEffect(() => {","    const refresh = (e) => {","      if (e === location?.pathname) {","        actionRef.current?.reset();","      }","    };","    window.eventEmitter.on('tabRefresh', refresh);","","    return () => {","      window.eventEmitter.off('tabRefresh', refresh);","    };","  }, []);","","  return (","    <GTable","      headerTitle='登录日志'","      actionRef={actionRef}","      rowKey='id'","      request={getLoginLog}","      columns={columns}","    />","  );","};","","export default connect(({ global }) => ({","    configMap: global?.configMap,","    dictMap: global?.dictMap","  }))((props) => (","    <WrapKeepAlive when={true} name={props?.location?.pathname}>","      <Page {...props} />","    </WrapKeepAlive>","  ));",""],"description":"dsHookDvaPage","group":"ds"},"dsHookModal":{"prefix":"dsHookModal","body":["/*"," * @CreatDate: 2021-10-18 21:04:20"," * @Describe: 新增、修改弹窗"," */","","import { useState, forwardRef, useImperativeHandle, useRef } from 'react';","import { ModalForm } from '@dsyd/com';","import { addDict, updateDict } from './service';","import { emptyRule, nameRule, markRule } from '@/utils/verify';","","const EditModal = ({ onRefresh }, ref) => {","  const formRef = useRef();","  const [visible, setVisiable] = useState(false);","  const [loading, setLoading] = useState(false);","  const [mode, setMode] = useState('新增');","","  useImperativeHandle(ref, () => ({","    open: (mode, record) => {","      setVisiable(true);","      setMode(mode);","      if (mode !== '新增') {","        if (formRef.current) {","          formRef.current?.setFieldsValue(record);","        } else {","          setTimeout(() => {","            formRef.current?.setFieldsValue(record);","          }, 500);","        }","      }","    }","  }));","","  const handleOk = async (values) => {","    let params = values;","","    setLoading(true);","    let res;","    if (mode === '新增') {","      res = await addDict(params);","    } else {","      const id = params.id;","      res = await updateDict(params, id);","    }","","    setLoading(false);","    if (res?.success) {","      setVisiable(false);","      onRefresh && onRefresh();","    }","  };","","  const handleClose = () => {","    formRef.current?.reset();","    setMode('新增');","  };","","  const formSet = [","    {","      type: 'input',","      name: 'id',","      label: 'id',","      column: 0","    },","    {","      type: 'input',","      label: '字典标识',","      dataIndex: 'dictKey',","      props: {","        disabled: mode === '修改'","      },","      validOptions: {","        rules: markRule","      }","    },","    {","      type: 'input',","      label: '字典名称',","      dataIndex: 'dictName',","      validOptions: {","        rules: nameRule","      }","    },","    {","      type: 'select',","      label: '分组',","      dataIndex: 'groups',","      optionsData: [","        { label: '系统', value: '系统' },","        { label: '表单', value: '表单' }","      ],","      validOptions: {","        rules: emptyRule","      }","    },","    {","      type: 'textarea',","      label: '字典说明',","      dataIndex: 'description',","      props: {","        showCount: true,","        maxLength: 200","      }","    }","  ];","","  return (","    <ModalForm","      formProps={{autoComplete: 'off'}}","      width={650}","      title={`${mode}字典`}","      formRef={formRef}","      visible={visible}","      confirmLoading={loading}","      formSet={formSet}","      onOk={handleOk}","      onCancel={() => setVisiable(false)}","      afterClose={handleClose}","    />","  );","};","","export default forwardRef(EditModal);",""],"description":"dsHookModal","group":"ds"},"dsHookModalDvaPage":{"prefix":"dsHookModalDvaPage","body":["/*"," * @CreatDate: 2021-10-19 09:03:02"," * @Describe: 简单列表查询模板"," */","","import { useRef, useEffect } from 'react';","import {connect} from 'umi';","import { GTable, WrapKeepAlive } from '@/components';","import { queryDictList, delDict } from './service';","import EditModal from './EditModal';","","const Page = ({ location, configMap, dictMap }) => {","  const actionRef = useRef();","  const modalRef = useRef();","","  const handleDelete = (id) => {","    delDict({ ids: [id] }).then(res => {","      if (res?.success) {","        actionRef.current?.reload();","      }","    });","  };","","  const columns = [","    {","      title: '用户账号',","      dataIndex: 'username',","      valueType: 'input'","    },","    {","      title: '用户昵称',","      dataIndex: 'nickName',","      valueType: 'input'","    },","    {","      title: '状态',","      dataIndex: 'loginStatus',","      valueType: 'select',","      valueEnum: {","        '登陆成功': { text: '登陆成功', status: 'Success' },","        '登陆失败': { text: '登陆失败', status: 'Default' }","      }","    },","    {","      title: 'IP地址',","      dataIndex: 'ipAddr',","      valueType: 'input'","    },","    {","      title: '登录时间',","      dataIndex: 'loginTime',","      type: 'dateTime',","      hideInSearch: true","    },","    {","      title: '登录时间',","      dataIndex: 'created_at',","      valueType: 'dateTimeRange',","      hideInTable: true,","      search: {","        transform: (value) => {","          return {","            loginTimeStart: value[0],","            loginTimeEnd: value[1]","          };","        }","      }","    },","    {","      title: '操作',","      dataIndex: 'option',","      valueType: 'option',","      hideInForm: true,","      width: 70,","      fixed: 'right',","      render: (_, record) => {","        const btns = [","            {","              name: '修改',","            //   auth: isAuth('uc:dict:update'),","              auth: true,","              method: () => {","                modalRef.current?.open('修改', record);","              }","            },","            {","              name: '删除',","            //   auth: isAuth('uc:dict:del'),","              auth: true,","              method: () => {","                handleDelete(record.id);","              },","              type: 'confirm',","              confirmText: <>确定要删除<a> {record.dictName} </a>吗？</>","            }","          ];","        return (<TableBtns buttons={btns} />);","      }","    }","  ];","","  useEffect(() => {","    const refresh = (e) => {","      if (e === location?.pathname) {","        actionRef.current?.reset();","      }","    };","    window.eventEmitter.on('tabRefresh', refresh);","","    return () => {","      window.eventEmitter.off('tabRefresh', refresh);","    };","  }, []);","","  return (","    <>","        <GTable","        headerTitle='登录日志'","        actionRef={actionRef}","        rowKey='id'","        request={queryDictList}","        columns={columns}","        toolBarRender={() => [","            <AuthBtn","            //   auth={isAuth('uc:dict:add')}","            auth={true}","              type='primary'","              onClick={() => modalRef.current?.open('新增')}","            >","              新增","            </AuthBtn>","          ]}","        />","        <EditModal","            ref={modalRef}","            onRefresh={() => actionRef.current?.reload()}","        />","    </>","  );","};","","export default connect(({ global }) => ({","  configMap: global?.configMap,","  dictMap: global?.dictMap","}))((props) => (","  <WrapKeepAlive when={true} name={props?.location?.pathname}>","    <Page {...props} />","  </WrapKeepAlive>","));",""],"description":"dsHookModalDvaPage","group":"ds"},"dsHookModalPage":{"prefix":"dsHookModalPage","body":["/*"," * @CreatDate: 2021-10-19 09:03:02"," * @Describe: 简单列表查询模板"," */","","import { useRef, useEffect } from 'react';","import { GTable, WrapKeepAlive } from '@/components';","import { queryDictList, delDict } from './service';","import EditModal from './EditModal';","","const Page = ({ location }) => {","  const actionRef = useRef();","  const modalRef = useRef();","","  const handleDelete = (id) => {","    delDict({ ids: [id] }).then(res => {","      if (res?.success) {","        actionRef.current?.reload();","      }","    });","  };","","  const columns = [","    {","      title: '用户账号',","      dataIndex: 'username',","      valueType: 'input'","    },","    {","      title: '用户昵称',","      dataIndex: 'nickName',","      valueType: 'input'","    },","    {","      title: '状态',","      dataIndex: 'loginStatus',","      valueType: 'select',","      valueEnum: {","        '登陆成功': { text: '登陆成功', status: 'Success' },","        '登陆失败': { text: '登陆失败', status: 'Default' }","      }","    },","    {","      title: 'IP地址',","      dataIndex: 'ipAddr',","      valueType: 'input'","    },","    {","      title: '登录时间',","      dataIndex: 'loginTime',","      type: 'dateTime',","      hideInSearch: true","    },","    {","      title: '登录时间',","      dataIndex: 'created_at',","      valueType: 'dateTimeRange',","      hideInTable: true,","      search: {","        transform: (value) => {","          return {","            loginTimeStart: value[0],","            loginTimeEnd: value[1]","          };","        }","      }","    },","    {","      title: '操作',","      dataIndex: 'option',","      valueType: 'option',","      hideInForm: true,","      width: 70,","      fixed: 'right',","      render: (_, record) => {","        const btns = [","            {","              name: '修改',","            //   auth: isAuth('uc:dict:update'),","              auth: true,","              method: () => {","                modalRef.current?.open('修改', record);","              }","            },","            {","              name: '删除',","            //   auth: isAuth('uc:dict:del'),","              auth: true,","              method: () => {","                handleDelete(record.id);","              },","              type: 'confirm',","              confirmText: <>确定要删除<a> {record.dictName} </a>吗？</>","            }","          ];","        return (<TableBtns buttons={btns} />);","      }","    }","  ];","","  useEffect(() => {","    const refresh = (e) => {","      if (e === location?.pathname) {","        actionRef.current?.reset();","      }","    };","    window.eventEmitter.on('tabRefresh', refresh);","","    return () => {","      window.eventEmitter.off('tabRefresh', refresh);","    };","  }, []);","","  return (","    <>","        <GTable","        headerTitle='登录日志'","        actionRef={actionRef}","        rowKey='id'","        request={queryDictList}","        columns={columns}","        toolBarRender={() => [","            <AuthBtn","            //   auth={isAuth('uc:dict:add')}","            auth={true}","              type='primary'","              onClick={() => modalRef.current?.open('新增')}","            >","              新增","            </AuthBtn>","          ]}","        />","        <EditModal","            ref={modalRef}","            onRefresh={() => actionRef.current?.reload()}","        />","    </>","  );","};","","export default ((props) => (","  <WrapKeepAlive when={true} name={props?.location?.pathname}>","    <Page {...props} />","  </WrapKeepAlive>","));",""],"description":"dsHookModalPage","group":"ds"},"dsHookPage":{"prefix":"dsHookPage","body":["/*"," * @CreatDate: 2021-10-19 09:03:02"," * @Describe: 无操作的简单列表查询模板"," */","","import { useRef, useEffect } from 'react';","import { GTable, WrapKeepAlive } from '@/components';","import { getLoginLog } from './service';","","const Page = ({ location }) => {","  const actionRef = useRef();","","  const columns = [","    {","      title: '用户账号',","      dataIndex: 'username',","      valueType: 'input'","    },","    {","      title: '用户昵称',","      dataIndex: 'nickName',","      valueType: 'input'","    },","    {","      title: '状态',","      dataIndex: 'loginStatus',","      valueType: 'select',","      valueEnum: {","        '登陆成功': { text: '登陆成功', status: 'Success' },","        '登陆失败': { text: '登陆失败', status: 'Default' }","      }","    },","    {","      title: 'IP地址',","      dataIndex: 'ipAddr',","      valueType: 'input'","    },","    {","      title: '登录时间',","      dataIndex: 'loginTime',","      type: 'dateTime',","      hideInSearch: true","    },","    {","      title: '登录时间',","      dataIndex: 'created_at',","      valueType: 'dateTimeRange',","      hideInTable: true,","      search: {","        transform: (value) => {","          return {","            loginTimeStart: value[0],","            loginTimeEnd: value[1]","          };","        }","      }","    },","    {","      title: '操作',","      dataIndex: 'option',","      valueType: 'option',","      hideInForm: true,","      width: 70,","      fixed: 'right',","      render: (_, record) => {","        const btns = [","          {","            name: '打开',","            // auth: isAuth('uc:dict:update'),","            auth: true,","            method: () => {","              console.log('方法');","            }","          }","        ];","        return (<TableBtns buttons={btns} />);","      }","    }","  ];","","  useEffect(() => {","    const refresh = (e) => {","      if (e === location?.pathname) {","        actionRef.current?.reset();","      }","    };","    window.eventEmitter.on('tabRefresh', refresh);","","    return () => {","      window.eventEmitter.off('tabRefresh', refresh);","    };","  }, []);","","  return (","    <GTable","      headerTitle='登录日志'","      actionRef={actionRef}","      rowKey='id'","      request={getLoginLog}","      columns={columns}","    />","  );","};","","export default ((props) => (","  <WrapKeepAlive when={true} name={props?.location?.pathname}>","    <Page {...props} />","  </WrapKeepAlive>","));",""],"description":"dsHookPage","group":"ds"},"dsHookTabs":{"prefix":"dsHookTabs","body":["/*"," * @CreatDate: 2021-10-19 09:03:02"," * @Describe: tabs模板"," */","","import { useEffect, useState } from 'react';","import { Tabs } from 'antd';","import StopCollect from './StopCollect';","import ResumeCollect from './ResumeCollect';","import { getProjectList } from './service';","","const { TabPane } = Tabs;","","const Page = ({ location }) => {","  const [projectList, setProjectList] = useState([]);","  const [refresh, setRefresh] = useState(false);","","  const getProject = () => {","    getProjectList().then(res => {","      if (res?.success) {","        let data = [];","        res?.data?.forEach(k => {","          data.push({","            label: k.label,","            value: k.code","          });","        });","        setProjectList(data);","      }","    });","  };","","  useEffect(() => {","    getProject();","","    const refresh = (e) => {","      if (e === location?.pathname) {","        setRefresh(true);","        setTimeout(() => {","          setRefresh(false);","          getProject();","        });","      }","    };","    window.eventEmitter.on('tabRefresh', refresh);","","    return () => {","      window.eventEmitter.off('tabRefresh', refresh);","    };","  }, []);","","  return (","    <Tabs defaultActiveKey='1' className='g-tabs'>","      {","        !refresh &&","        <>","          <TabPane tab='停催' key='1'>","            <StopCollect location={location} projectList={projectList} />","          </TabPane>","          <TabPane tab='复催' key='2'>","            <ResumeCollect location={location} projectList={projectList} />","          </TabPane>","        </>","      }","    </Tabs>","  );","};","","export default Page;",""],"description":"dsHookTabs","group":"ds"},"dsIcon":{"prefix":"dsIcon","body":["import { Icon } from \"@dsyd/com\";","","<Icon type=\"shujuji\" />"],"description":"dsIcon","group":"ds"},"dsModalForm":{"prefix":"dsModalForm","body":["import { ModalForm } from \"tntd\";","","const props = {","    visible,","    title: '修改密码',","    initialValues: { id: 1 },","    formSet: [","      {","        type: 'input',","        dataIndex: 'id',","        title: 'id',","        column: 0, // 占比列数为0，即可隐藏","      },","      {","        type: 'password',","        dataIndex: 'password',","        title: '密码框',","        validOptions: {","          rules: [","            {","              required: true,","              message: '不能为空',","            },","          ],","        },","      },","      {","        type: 'password',","        dataIndex: 'confirm',","        title: '密码确认',","        validOptions: {","          dependencies: ['password'],","          rules: [","            {","              required: true,","              message: '不能为空',","            },","            ({ getFieldValue }) => ({","              validator(rule, value) {","                if (!value || getFieldValue('password') === value) {","                  return Promise.resolve();","                }","                return Promise.reject(new Error('密码不一致'));","              },","            }),","          ],","        },","      },","    ],","    onCancel: () => {","      setVisible(false);","    },","    onOk: values => {","      console.log(values);","    },","    beforeRender: () => (","      <Alert","        message=\"表单前位置渲染\"","        type=\"warning\"","        style={{ marginBottom: 10 }}","      />","    ),","    afterRender: () => <Alert message=\"表单后位置渲染\" />,","};","","<ModalForm {...props} />","",""],"description":"dsModalForm","group":"ds"},"dsMoneyShow":{"prefix":"dsMoneyShow","body":["import { Money } from \"@dsyd/com\";","","const { MoneyShow } = Money.set(1); // 甚至转化单位","","<>","    无值：","    <MoneyShow value={'--'} />","    <br />","    小","    <MoneyShow value={10000} size=\"sm\" />","    <br />","    中（默认）","    <MoneyShow value={10000} />","    <br />","    大","    <MoneyShow value={10000} size=\"lg\" />","    <br />","    加粗","    <MoneyShow value={10000} size=\"lg\" bold />","    <br />","    颜色（green,red,orange,primary,默认文本色）","    <MoneyShow value={10000} size=\"lg\" color=\"green\" />","    <MoneyShow value={10000} size=\"lg\" color=\"red\" />","    <MoneyShow value={10000} size=\"lg\" color=\"orange\" />","    <MoneyShow value={10000} size=\"lg\" color=\"primary\" />","    <br />","    横排：","    <MoneyShow value={10000} align=\"horizontal\" precision={4} />","</>"],"description":"dsMoneyShow","group":"ds"},"dsNumRange":{"prefix":"dsNumRange","body":["import { NumRange } from \"@dsyd/com\";","","<NumRange","    value={value}","    style={{ width: 500 }}","    onChange={v => {","    setValue(v);","    }}","/>"],"description":"dsNumRange","group":"ds"},"dsSearchTree":{"prefix":"dsSearchTree","body":["import { SearchTree } from \"@dsyd/com\";","import { FolderOutlined, FileTextOutlined } from '@ant-design/icons';","","const treeData = [","    {","      key: '1',","      title: '父文件1',","      children: [","        { key: '1-1', title: '子文件1' },","        { key: '1-2', title: '子文件2' },","      ],","    },","    {","      key: '2',","      title: '父文件2',","      children: [","        {","          key: '2-1',","          title: '子文件3',","          folder: true,","          children: [{ key: '2-1-1', title: '子文件5' }],","        },","        {","          key: '2-2',","          title: '子文件4',","        },","      ],","    },","  ];","  ","","<SearchTree treeData={treeData} iconRender={() => <FolderOutlined />} />"],"description":"dsSearchTree","group":"ds"},"dsTableBtns":{"prefix":"dsTableBtns","body":["import { TableBtns } from \"@dsyd/com\";","","const buttons = [","    {","      name: '编辑',","      auth: false,","      method: () => {","        message.success('设置点击事件');","      },","    },","    {","      type: 'confirm',","      name: '删除',","      auth: true,","      method: () => {","        message.success('删除点击事件');","      },","    },","    {","      type: 'download',","      name: '下载',","      auth: true,","      fileName: 'test.csv',","      pathname: 'http://www.baidu.com',","    },","    {","      type: 'link',","      name: '链接',","      auth: true,","      pathname: 'http://www.baidu.com',","    },","    {","      type: 'status',","      status: 1, // 默认0 1 切换","      textEnum: { 1: '授权', 0: '取消授权' },","      auth: true,","      method: v => {","        console.log(v);","      },","    },","    {","      name: '编辑1',","      auth: true,","      method: () => {","        message.success('设置点击事件');","      },","    },","    {","      type: 'confirm',","      name: '删除1',","      auth: true,","      method: () => {","        message.success('删除点击事件');","      },","    },","    {","      type: 'download',","      name: '下载1',","      auth: false,","      fileName: 'test.csv',","      pathname: 'http://www.baidu.com',","    },","    {","      type: 'link',","      name: '链接1',","      auth: true,","      pathname: 'http://www.baidu.com',","    },","    {","      type: 'status',","      status: 1, // 默认0 1 切换","      auth: true,","      method: v => {","        console.log(v);","      },","    }","  ];","","<TableBtns buttons={buttons} />"],"description":"dsTableBtns","group":"ds"},"exportArray":{"prefix":"exportArray","body":["export const array = [","    {","        label: '姓名',","        value: 'name'","    },","    {","        label: '性别',","        value: 'sex'","    },","]",""],"description":"exportArray","group":"export"},"exportFunc":{"prefix":"exportFunc","body":["export const func = () => {","    return [];","}",""],"description":"exportFunc","group":"export"},"funcDispatch":{"prefix":"funcDispatch","body":["dispatch({","    type: \"name/setAttrValue\",","    payload: {","        name: 1","    }","});",""],"description":"funcDispatch","group":"func"},"funcForEach":{"prefix":"funcForEach","body":["const array = ['a', 'b', 'c'];","","array.forEach((item, index, array) => {","    console.log(item);","});",""],"description":"funcForEach","group":"func"},"funcMap":{"prefix":"funcMap","body":["{","    (list || []).map((item, index) => {","        console.log('item', item);","","        return (","            <div","                key={item.id}","                onClick={() => {","                    console.log('item', item);","                }}","                style={{","                    color: index === 1 ? \"red\" : \"\",","                    lineHeight: '24px'","                }}","            >","                {item.name}","            </div>","        )","    })","}",""],"description":"funcMap","group":"func"},"funcService":{"prefix":"funcService","body":["const params = {","    name: 'xiaoMing'","};","xxxxAPI.getXxxList(params).then(res => {","    if (res.success) {","        message.success(res.message);","    } else {","        message.error(res.message);","    }","}).catch(e => {","    console.log(e);","});",""],"description":"funcService","group":"func"},"funcTableRender":{"prefix":"funcTableRender","body":["render: (text, row) => {","    return (","        <span>","            <a>修改</a>","            <Divider type=\"vertical\" />","            <a>删除</a>","        </span>","    )","}",""],"description":"funcTableRender","group":"func"},"pageClass":{"prefix":"pageClass","body":["/*"," * @CreatDate: 2021-11-11 09:38:38 "," * @Describe: xxx "," */","","import React, { PureComponent } from 'react';","import { message } from \"antd\";","// import service from './service'; ","// import style from './index.less';  ","","export default class extends PureComponent {","    constructor(props) {","        super(props);","    }","","    state = {","        list: []","    };","","    componentDidMount() {","        // 组件已经挂载","        // 示例：执行 this 里的方法","        this.getList();","    }","","    componentDidUpdate(prevProps, prevState) {","        // 组件更新","        // 示例","        // if ( prevState.flag !== this.state.flag ){}","    }","","    componentWillUnmount() {","        // 组件卸载","    }","","    getList = (obj) => {","        service.getUserList({","            ...this.state.params,","            ...obj","        }).then(res => {","            this.setState({","                list: res?.data?.list || []","            })","        })","    };","","    render() {","        let { list = [], params = {} } = this.state;","","        return (","            <div>","                hello world","            </div>","        );","    }","}",""],"description":"pageClass","group":"page"},"pageClassDva":{"prefix":"pageClassDva","body":["/*"," * @CreatDate: 2021-11-11 09:39:03 "," * @Describe: xxx "," */","","import React, { PureComponent } from 'react';","import { connect } from 'umi';","import { message } from \"antd\";","// import service from './service'; ","// import style from './index.less';                  ","","class Page extends PureComponent {","    constructor(props) {","        super(props);","    }","","    state = {","        list: []","    };","","    componentDidMount() {","        // 组件已经挂载","        this.getList();","    }","","    componentDidUpdate(prevProps, prevState) {","        // 组件更新","        // 示例","        // if ( prevState.flag !== this.state.flag ){}","    }","","    componentWillUnmount() {","        // 组件卸载","    }","","    getList = (obj) => {","        service.getUserList({","            ...this.state.params,","            ...obj","        }).then(res => {","            this.setState({","                list: res?.data?.list || []","            })","        })","    };","","    render() {","        let { list, params } = this.state;","","        return (","            <div>","                hello world","            </div>","        );","    }","}","","export default connect(({ global }) => ({","    configMap: global?.configMap","  }))(Page);","",""],"description":"pageClassDva","group":"page"},"pageHookDefalut":{"prefix":"pageHookDefalut","body":["/*"," * @CreatDate: 2021-11-11 09:42:16 "," * @Describe: xxx "," */","","import { useEffect, useState } from \"react\";","import { message } from \"antd\";","// import service from './service'; ","// import style from './index.less';  ","","export default () => {","    const [modalVisible, setModalVisible] = useState(false);","","    useEffect(() => {","        getSolutionList();","    }, []);","","    const getSolutionList = () => {","        // const params = {};","        // service.getSolutionList(params).then((data) => {","        //     console.log('data', data);","        // })","    };","","    return (","        <div className=\"hook-page\">","            hook page","        </div>","    );","};",""],"description":"pageHookDefalut","group":"page"},"pageHookDva":{"prefix":"pageHookDva","body":["/*"," * @CreatDate: 2021-11-11 09:43:40 "," * @Describe: xxx "," */","","import { useEffect, useState } from \"react\";","import { connect } from \"umi\";","import { message } from \"antd\";","// import service from './service'; ","// import style from './index.less';  ","","const Page = ({ configMap }) => {","    const [modalVisible, setModalVisible] = useState(false);","","    useEffect(() => {","        getSolutionList();","    }, []);","","    const getSolutionList = () => {","        // const params = {};","        // service.getSolutionList(params).then((data) => {","        //     console.log('data', data);","        // })","    };","","    return (","        <div className=\"hook-page\">","            hook page","        </div>","    );","};","","export default connect(({ global }) => ({","    configMap: global?.configMap","}))(Page);",""],"description":"pageHookDva","group":"page"},"pageHookModal":{"prefix":"pageHookModal","body":["/*"," * @CreatDate: 2021-11-11 09:48:52 "," * @Describe: xxx "," */","","import { useEffect, useState } from \"react\";","import { connect } from \"umi\";","import { Modal } from \"antd\";","// import service from './service'; ","// import style from './index.less'; ","","const HookModal = ({configMap}) => {","\tconst [modalVisible, setModalVisible] = useState(false);","\tconst [modalItem, setModalItem] = useState(false);","","\tuseEffect(() => {","\t\tinit();","\t}, []);","","\tconst init = () => {","\t\tconsole.log(\"init function\");","\t};","","\tconst onOk = () => { };","\tconst onCancel = () => { };","\tconst afterClose = () => { };","","\treturn (","\t\t<div className=\"hook-modal\">","\t\t\t<Modal","\t\t\t\ttitle=\"HOOK弹窗\"","\t\t\t\tvisible={modalVisible}","\t\t\t\tonOk={onOk}","\t\t\t\tonCancel={onCancel}","\t\t\t\tafterClose={afterClose}","\t\t\t>","","\t\t\t</Modal>","\t\t</div>","\t);","};","","export default connect(({ global }) => ({","    configMap: global?.configMap","}))(Page);",""],"description":"pageHookModal","group":"page"},"pageHookTable":{"prefix":"pageHookTable","body":["/*"," * @CreatDate: 2021-11-11 09:48:52 "," * @Describe: xxx "," */","","import { useEffect, useState } from \"react\";","import { connect } from \"umi\";","import { Modal } from \"antd\";","// import service from './service'; ","// import style from './index.less'; ","","const HookTable = ({configMap}) => {","\tconst [tableLoading, setTableLoading] = useState(false);","","\tconst dataSource = [","\t\t{","\t\t\tkey: \"1\",","\t\t\tname: \"胡彦斌\",","\t\t\tage: 32,","\t\t\taddress: \"西湖区湖底公园1号\"","\t\t},","\t\t{","\t\t\tkey: \"2\",","\t\t\tname: \"胡彦祖\",","\t\t\tage: 42,","\t\t\taddress: \"西湖区湖底公园1号\"","\t\t}","\t];","","\tconst columns = [","\t\t{","\t\t\ttitle: \"姓名\",","\t\t\tdataIndex: \"name\",","\t\t\tkey: \"name\",","\t\t\tellipsis: true","\t\t},","\t\t{","\t\t\ttitle: \"年龄\",","\t\t\tdataIndex: \"age\",","\t\t\tkey: \"age\"","\t\t},","\t\t{","\t\t\ttitle: \"住址\",","\t\t\tdataIndex: \"address\",","\t\t\tkey: \"address\"","\t\t},","\t\t{","\t\t\ttitle: \"操作\",","\t\t\tkey: \"action\",","\t\t\trender: (text, record) => (","\t\t\t\t<span>","\t\t\t\t\t<a>修改</a>","\t\t\t\t\t<Divider type=\"vertical\" />","\t\t\t\t\t<a>删除</a>","\t\t\t\t</span>","\t\t\t)","\t\t}","\t];","","\treturn (","\t\t<div className=\"hook-modal\">","\t\t\t<Table","\t\t\t\tclassName='border-table'","\t\t\t\trowKey=\"id\"","\t\t\t\tdataSource={dataSource}","\t\t\t\tcolumns={columns}","\t\t\t\tloading={tableLoading}","\t\t\t\tscroll={{ x: 1900 }}","\t\t\t\tpagination={{","\t\t\t\t\tpageSize,","\t\t\t\t\ttotal,","\t\t\t\t\tcurrent: currentPage,","\t\t\t\t\tshowTotal: total => `共${total}条`,","\t\t\t\t\tonChange: () => { },","\t\t\t\t\tonShowSizeChange: () => { },","\t\t\t\t\tshowQuickJumper: true,","\t\t\t\t\tshowSizeChanger: true","\t\t\t\t}}","\t\t\t/>","\t\t</div>","\t);","};","","export default connect(({ global }) => ({","    configMap: global?.configMap","}))(Page);",""],"description":"pageHookTable","group":"page"},"pageModel":{"prefix":"pageModel","body":["import { message } from \"antd\";","import service from \"./service\";","","export default {","    namespace: \"demo\",","    state: {","        list: []","    },","    effects: {","        *getSolutionList({ payload }, { call, put, select }) {","            const { id } = yield select(state => state.demo);","            const res = yield call(service.getSolutionList, payload);","","            yield put({","                type: \"updateState\",","                payload: {","                    list: res","                }","            });","        }","    },","    reducers: {","        updateState(state, { payload }) {","            return {","                ...state,","                ...payload","            };","        }","    }","};",""],"description":"pageModel","group":"page"}}